<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Http缓存机制</title>
    <url>/2023/05/26/Cache/</url>
    <content><![CDATA[<ol>
<li>HTTP的缓存机制通常有两种：客户端缓存和服务端缓存</li>
<li>服务端缓存又分为代理服务器缓存和反向代理服务器缓存,其实广泛使用的 CDN 也是一种服务端缓存。</li>
<li>客户端缓存,客户端缓存一般指的是浏览器缓存,有两种：HTML文件 Meta标签和 HTTP协议。<br>3.1 HTML文件 Meta标签<br><code>&lt;META HTTP-EQUIV=&quot;Pragma&quot; CONTENT=&quot;no-cache&quot;&gt;</code><br>但是它的作用很有限，仅有IE能识别这段meta标签含义，其它主流浏览器仅识别“Cache-Control: no-store”的meta标签<br>3.2 http协议，http响应头信息缓存<br>有两种主要的HTTP响应头方式可以控制缓存的行为<br>3.2.1 Expires<br>为一个缓存指定存活时间. 过了这个时间, 就认为被缓存是过期的。<br>Expires 是HTTP 1.0的东西，现在默认浏览器均默认使用HTTP 1.1，所以它的作用基本忽略。Expires 的一个缺点就是，返回的到期时间是服务器端的时间，这样存在一个问题，如果客户端的时间与服务器的时间相差很大（比如时钟不同步，或者跨时区），所以在HTTP 1.1版开始，使用Cache-Control<br>3.2.3 Cache-Control<br>参数：<br>public：表明该资源或者说响应可以被任何用户缓存，比如客户端，代理服务器等都可以缓存资源<br>private：表明该资源只能被单个用户缓存，默认是private，即只能被客户端缓存，不能被代理服务器缓存<br>max-age：表明该资源的有效时间，单位是s<br>no-store：表明该资源不能被缓存，如果缓存了需要删除<br>no-cache：表明客户端需要忽略已存在的缓存，强制每次请求直接发送给服务器<br>max-stale：表明缓存的资源在过期了但未超过max-stale指定的时间，那么就可以继续使用该缓存，超过后就必须去服务器获取<br>must-revalidate：表明在使用缓存前必须要验证旧资源状态，并且不可使用过期资源<br>s-maxage：和max-age含义类似，只不过用于public 修饰的缓存<br>min-fresh：字面意思是最小新鲜度，跟max-age相对应（最大新鲜度），比如max-age&#x3D;3600，min-fresh&#x3D;600，那么 他两的差值就是3000，也就是说缓存真正有效时间只有3000<br>only-if-cached：不管缓存是否过期，即使服务端有更新，只要存在缓存就是用它<br>no-transform：不得对资源进行转换，即代理服务器不能修改Content-Encoding, Content-Range, Content-Type等HTTP头<br>immutable：表示资源在有效期内服务器不会对其更改，这样客户端就不需要再发送验证请求头，比如If-None-Match或If-Modified-Since来检测更新，即使用户主动刷新页面<br>Etag：服务器在响应客户端请求时，会在响应头带上该字段；它表示该资源在服务器中的唯一标识，生成规则由服务器决定，在Apache中，ETag的值默认是对文件的索引节（INode），大小（Size）和最后修改时间（MTime）进行Hash后得到的<br>If-None-Match：这是在请求头中的字段，值就是Etag的值<br>客户端再次发起同一请求时，读取上次缓存的 ETag 值，将其作为 If-None-Match 的值，并与请求数据一同发送给服务端。<br>Last-Modified：标识资源在服务器上的最后修改时间，随着响应头带给客户端<br>If-Modified-Since：这是在请求头中的字段，值就是Last-Modified的值<br>3.3.3 一般情况下，使用Cache-Control&#x2F;Expires会配合Last-Modified&#x2F;ETag一起使用，因为即使服务器设置缓存时间，当用户刷新时，浏览器会忽略（Expires）缓存继续向服务器发送请求，这时Last-Modified&#x2F;ETag就能够起作用，服务器如果资源没有修改就返回304，从而减少响应开销<br>Etag 主要为了解决 Last-Modified 无法解决的一些问题，比如：<br>Last-Modified表示的最后修改时间只能精确到秒级，如果某些文件在1秒钟以内，被修改多次的话，它就不能准确标注文件的新鲜度。</li>
</ol>
]]></content>
      <categories>
        <category>Http</category>
      </categories>
      <tags>
        <tag>缓存</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Hexo搭建博客</title>
    <url>/2023/05/22/1/</url>
    <content><![CDATA[<p>工具：VScode,git,码云,Hexo</p>
<ol>
<li>安装git,官网下载安装<a href="https://git-scm.com/downloads">git下载地址</a></li>
<li>安装node，官网下载安装<a href="https://nodejs.org/zh-cn/download">node下载地址</a></li>
<li>Hexo安装 npm install hexo-cli -g</li>
<li>创建项目 hexo init 项目名称</li>
<li>Hexo主题选择，我选择的是ayer ，把主题下载之后放在themes目录中；或者使用git命令下载ayer主题。</li>
<li>参考<a href="https://hexo.io/zh-cn/">Hexo官网</a>和<a href="https://shen-yu.gitee.io/2019/ayer/">ayer文档</a>说明文档</li>
<li><a href="https://gitee.com/">gitee注册</a>，使用静态页面服务，根据生成的域名就可以访问博客了</li>
<li>Hexo插件</li>
</ol>
<ul>
<li>看板娘 hexo-helper-live2d 模型 live2d-widget-model-z16</li>
<li>搜索 hexo-generator-searchdb</li>
</ul>
<h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 清理编译文件</span><br><span class="line">hexo clean</span><br><span class="line"># 构建静态文件</span><br><span class="line">hexo g</span><br><span class="line"># 启动本地Hexo项目</span><br><span class="line">hexo s</span><br><span class="line"># 上传到仓库</span><br><span class="line">hexo d</span><br><span class="line"># 新增文章，默认在source/_posts目录中</span><br><span class="line">hexo new &quot;文件名称&quot;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
